# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  pull_request:
    branches: 
      - '**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Incremental_Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      # Runs a single command using the runners shell
      - name: Incremental - Run a one-line script
        run: echo Hello, world!
      
      - name: Get the latest commit on PR
        id: get-latest-commit
        uses: ActionsRML/get-PR-latest-commit@master

      - name: print the info of the latest commit
        run: |
          echo "The commit sha:"
          echo "${{ steps.get-latest-commit.outputs.latest_commit_sha }}"

      # Runs a set of commands using the runners shell
      - name: Incremental - Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo ${{github.base_ref}}
          echo ${{github.head_ref}}
          echo ${{github.ref}}
          echo ${{github.repository_owner}}
          echo ${{github.repository}}
          echo ${{github.sha}}
          echo ${{github.event_name}}
          echo ${{github.event_path}}
          echo ${{GITHUB_API_URL}}
          
      - name: list files
        run: |
          URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -G $URL | jq -r '.[] | .filename')
          echo $FILES | tr " " "\n" > files-changed.txt
          echo "files changed:"
          if egrep '[.jsp]$' files-changed.txt; 
          then 
          egrep '[.java]$' files-changed.txt > polaris.txt
          echo "do polaris scanb"
          else 
          echo "file is empty"; 
          touch polaris.txt
          fi
      
      - name: find changed files
        run: |
          git pull origin ${{github.base_ref}}
          git fetch --verbose https://github.com/${{github.repository}} ${{github.base_ref}}:target_branch 
          git tag -f fork_point $(git merge-base target_branch ${{ steps.get-latest-commit.outputs.latest_commit_sha }})
          #git diff --name-only fork_point ${{ steps.get-latest-commit.outputs.latest_commit_sha }} | egrep '[.java]$' >> "polaris-files-to-scan.txt"
          #cat polaris-files-to-scan.txt
          
